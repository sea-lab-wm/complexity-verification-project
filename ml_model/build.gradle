/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
plugins {
  //id "org.sonarqube" version "2.7"
  //id 'org.checkerframework' version '0.6.9'
  id "application"
  id "com.diffplug.spotless" version "6.19.0"
}

apply plugin: 'java'
apply plugin: 'com.diffplug.spotless'

repositories {
  mavenCentral()
}


dependencies {
  implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.24.7'
  implementation 'com.github.javaparser:javaparser-core:3.24.7'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

  compileOnly 'org.projectlombok:lombok:1.18.26'
  annotationProcessor 'org.projectlombok:lombok:1.18.26'

  testCompileOnly 'org.projectlombok:lombok:1.18.26'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
}

compileJava.options.encoding = 'UTF-8'

ext {
   javaMainClass = "Parser"
}
application {
    mainClassName = javaMainClass
}

task printClasspath {
    println "${sourceSets.main.compileClasspath.asPath}"
}

// Extracted from : https://github.com/diffplug/spotless/blob/main/plugin-gradle/README.md#java

// spotless {
//   java {
//     importOrder()
//     removeUnusedImports()
//     googleJavaFormat("1.10.0")
//     target 'src/**/*.java'
//   }
// }


test {
    useJUnitPlatform()
    beforeTest { descriptor ->
        println "Running test: ${descriptor.displayName}"
    }
    afterTest { descriptor, result ->
        println "Finished test: ${descriptor.displayName}"
    }
}
