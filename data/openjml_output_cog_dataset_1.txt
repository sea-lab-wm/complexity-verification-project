cog_complexity_validation_datasets/One/Tasks.java:48: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main1: int multiply overflow
            result = result * x;
                            ^
cog_complexity_validation_datasets/One/Tasks.java:208: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main11: int multiply overflow
            result = result * num1;
                            ^
cog_complexity_validation_datasets/One/Tasks.java:268: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
                    array2[i][j] += array[i][k]*array1[k][j];
                           ^
  Reason: Double rewriting of ident: i i_8543_8543___109 i_8543_8557___112
cog_complexity_validation_datasets/One/Tasks.java:414: verify: The prover cannot establish an assertion (UndefinedCalledMethodPrecondition: /home/juan/openjml/specs/java/lang/CharSequence.jml:57:) in method main17
}
^
Note: Call stack
  /home/juan/openjml/specs/java/lang/String.jml:753: java.lang.CharSequence.equal
  /home/juan/openjml/specs/java/lang/String.jml:730: java.lang.String.indexOf
  cog_complexity_validation_datasets/One/Tasks.java:296: java.lang.String.indexOf
/home/juan/openjml/specs/java/lang/CharSequence.jml:57: verify: Associated declaration: cog_complexity_validation_datasets/One/Tasks.java:414:
        public static pure helper model boolean equal(char[] a, \bigint astart, char[] b, \bigint bstart, \bigint len);
                                                ^
/home/juan/openjml/specs/java/lang/CharSequence.jml:52: verify: Precondition conjunct is false: astart >= 0
        requires a != null && b!= null && astart >= 0 && bstart >= 0 &&
                                                 ^
cog_complexity_validation_datasets/One/Tasks.java:325: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main18: int multiply overflow
            if( (max*i)%min == 0 ) {
                    ^
cog_complexity_validation_datasets/One/Tasks.java:326: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main18: int multiply overflow
                results = i*max; break; // Note: result had to be renamed to results to allow compilation
                           ^
cog_complexity_validation_datasets/One/Tasks.java:345: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method main19
            result.append(Character.toUpperCase(words[i].charAt(0)))
                                                     ^
cog_complexity_validation_datasets/One/Tasks.java:345: verify: The prover cannot establish an assertion (InvariantEntrance: /home/juan/openjml/specs/java/lang/CharSequence.jml:30:) in method main19: (Caller: cog_complexity_validation_datasets.One.Tasks.main19(java.lang.String[]), Callee: java.lang.String.charAt(int))
            result.append(Character.toUpperCase(words[i].charAt(0)))
                                                               ^
/home/juan/openjml/specs/java/lang/CharSequence.jml:30: verify: Associated declaration: cog_complexity_validation_datasets/One/Tasks.java:345:
	//-RAC@ public invariant charArray != null; // FIXME - why this when there is a non_null declaration
	               ^
cog_complexity_validation_datasets/One/Tasks.java:70: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main2: overflow in int sum
                counter++;
                       ^
cog_complexity_validation_datasets/One/Tasks.java:374: verify: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method main21
            int tmp=array[array.length-i-1];
                         ^
cog_complexity_validation_datasets/One/Tasks.java:374: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main21: underflow in int difference
            int tmp=array[array.length-i-1];
                                        ^
cog_complexity_validation_datasets/One/Tasks.java:374: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main21: overflow in int difference
            int tmp=array[array.length-i-1];
                                      ^
cog_complexity_validation_datasets/One/Tasks.java:380: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method main21
            System.out.println(array[i]);
                                    ^
cog_complexity_validation_datasets/One/Tasks.java:374: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method main21
            int tmp=array[array.length-i-1];
                         ^
cog_complexity_validation_datasets/One/Tasks.java:408: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main23: int multiply overflow
            array[i] = array[i] * 2;
                                ^
cog_complexity_validation_datasets/One/Tasks.java:408: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method main23
            array[i] = array[i] * 2;
                 ^
cog_complexity_validation_datasets/One/Tasks.java:411: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method main23
        System.out.println(array[i]);
                                ^
cog_complexity_validation_datasets/One/Tasks.java:88: verify: The prover cannot establish an assertion (PossiblyDivideByZero) in method main3
            temp = number1 % number2;
                           ^
cog_complexity_validation_datasets/One/Tasks.java:103: verify: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method main4
                if (array[counter2 - 1] > array[counter2]) {
                                               ^
cog_complexity_validation_datasets/One/Tasks.java:112: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method main4
            System.out.println(array[counter3]);
                                    ^
cog_complexity_validation_datasets/One/Tasks.java:103: verify: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method main4
                if (array[counter2 - 1] > array[counter2]) {
                         ^
cog_complexity_validation_datasets/One/Tasks.java:123: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main5: underflow in int sum
            int m = (index1 + index2) / 2;
                            ^
cog_complexity_validation_datasets/One/Tasks.java:123: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main5: overflow in int sum
            int m = (index1 + index2) / 2;
                            ^
cog_complexity_validation_datasets/One/Tasks.java:124: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method main5
            if (key < array[m])
                           ^
cog_complexity_validation_datasets/One/Tasks.java:124: verify: The prover cannot establish an assertion (PossiblyTooLargeIndex) in method main5
            if (key < array[m])
                           ^
cog_complexity_validation_datasets/One/Tasks.java:141: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main6: underflow in int sum
            result = result + i;
                            ^
cog_complexity_validation_datasets/One/Tasks.java:141: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main6: overflow in int sum
            result = result + i;
                            ^
cog_complexity_validation_datasets/One/Tasks.java:151: verify: The prover cannot establish an assertion (PossiblyNegativeIndex) in method main7
            if (array[i] > result)
                     ^
cog_complexity_validation_datasets/One/Tasks.java:164: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main8: overflow in int sum
            result = result + number % 10;
                            ^
cog_complexity_validation_datasets/One/Tasks.java:164: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method main8: underflow in int sum
            result = result + number % 10;
                            ^
cog_complexity_validation_datasets/One/Tasks.java:177: verify: The prover cannot establish an assertion (PossiblyDivideByZero) in method main9
            if(number % i == 0) {
                      ^
1 error
33 verification failures
